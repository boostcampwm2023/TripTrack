on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  deploy:
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'be') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: 'backend/.nvmrc'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'

      - name: Install dependencies
        run: |
          cd backend
          yarn install --frozen-lockfile

      - name: Build Docker image
        run: docker build -t ${{ secrets.NCP_DOCKER_REGISTORY }}/snap-point:latest ./backend

      - name: Login to NCP container registory
        run: docker login ${{ secrets.NCP_DOCKER_REGISTORY }} -u ${{ secrets.NCP_ACCESS_KEY }} -p ${{ secrets.NCP_SECRET_KEY }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.NCP_DOCKER_REGISTORY }}/snap-point:latest

      - name: SSH into Ubuntu server and pull the latest image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          key: ${{ secrets.SSH_PEM_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            docker login ${{ secrets.NCP_DOCKER_REGISTORY }} -u ${{ secrets.NCP_ACCESS_KEY }} -p ${{ secrets.NCP_SECRET_KEY }}
            docker stop snap-point-container || true
            docker rm snap-point-container || true
            docker image prune -f
            docker pull ${{ secrets.NCP_DOCKER_REGISTORY }}/snap-point:latest
            docker run -d -p 3000:3000 --name snap-point-container \
            -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            -e SHADOW_DATABASE_URL="${{ secrets.SHADOW_DATABASE_URL }}" \
            -e NCP_DOCKER_REGISTORY="${{ secrets.NCP_DOCKER_REGISTORY }}" \
            -e BUCKET_URL="${{ secrets.BUCKET_URL }}" \
            -e NCP_BUCKET_ENDPOINT="${{ secrets.NCP_BUCKET_ENDPOINT }}" \
            -e NCP_BUCKET_NAME="${{ secrets.NCP_BUCKET_NAME }}" \
            -e NCP_BUCKET_REGION="${{ secrets.NCP_BUCKET_REGION }}" \
            -e JWT_ACCESS_SECRET="${{ secrets.JWT_ACCESS_SECRET }}" \
            -e JWT_REFRESH_SECRET="${{ secrets.JWT_REFRESH_SECRET }}" \
            -e JWT_ACCESS_EXPIRATION_TIME="${{ secrets.JWT_ACCESS_EXPIRATION_TIME }}" \
            -e JWT_REFRESH_EXPIRATION_TIME="${{ secrets.JWT_REFRESH_EXPIRATION_TIME }}" \
            ${{ secrets.NCP_DOCKER_REGISTORY }}/snap-point:latest 
